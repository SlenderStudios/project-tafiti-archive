//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591

namespace WLQuickApps.FieldManager.Business.LiveAlertsSubscriptionService {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SubscriptionSoapBinding", Namespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecServicesInformation))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecServicesContact))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecUsersGroup))]
    public partial class AlertsWebServicesService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback InitiateSignupOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeSubscriptionOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnsubscribeAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback PartnerSignUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserSignUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindGroupsForUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FindAllUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateSubscriberGroupOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public AlertsWebServicesService() {
            this.Url = global::WLQuickApps.FieldManager.Business.Properties.Settings.Default.WLQuickApps_FieldManager_Business_LiveAlertsSubscriptionService_AlertsWebServicesService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event InitiateSignupCompletedEventHandler InitiateSignupCompleted;
        
        /// <remarks/>
        public event ChangeSubscriptionCompletedEventHandler ChangeSubscriptionCompleted;
        
        /// <remarks/>
        public event UnsubscribeAllCompletedEventHandler UnsubscribeAllCompleted;
        
        /// <remarks/>
        public event AddGroupCompletedEventHandler AddGroupCompleted;
        
        /// <remarks/>
        public event PartnerSignUpCompletedEventHandler PartnerSignUpCompleted;
        
        /// <remarks/>
        public event UserSignUpCompletedEventHandler UserSignUpCompleted;
        
        /// <remarks/>
        public event RemoveGroupCompletedEventHandler RemoveGroupCompleted;
        
        /// <remarks/>
        public event FindGroupsForUserCompletedEventHandler FindGroupsForUserCompleted;
        
        /// <remarks/>
        public event FindAllGroupsCompletedEventHandler FindAllGroupsCompleted;
        
        /// <remarks/>
        public event FindAllUsersCompletedEventHandler FindAllUsersCompleted;
        
        /// <remarks/>
        public event ValidateSubscriberGroupCompletedEventHandler ValidateSubscriberGroupCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("InitiateSignupReturn")]
        public RecAlertsRequestResponse InitiateSignup(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string returnURL, string transportType) {
            object[] results = this.Invoke("InitiateSignup", new object[] {
                        h,
                        ID,
                        partnerUID,
                        returnURL,
                        transportType});
            return ((RecAlertsRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void InitiateSignupAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string returnURL, string transportType) {
            this.InitiateSignupAsync(h, ID, partnerUID, returnURL, transportType, null);
        }
        
        /// <remarks/>
        public void InitiateSignupAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string returnURL, string transportType, object userState) {
            if ((this.InitiateSignupOperationCompleted == null)) {
                this.InitiateSignupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInitiateSignupOperationCompleted);
            }
            this.InvokeAsync("InitiateSignup", new object[] {
                        h,
                        ID,
                        partnerUID,
                        returnURL,
                        transportType}, this.InitiateSignupOperationCompleted, userState);
        }
        
        private void OnInitiateSignupOperationCompleted(object arg) {
            if ((this.InitiateSignupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InitiateSignupCompleted(this, new InitiateSignupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("ChangeSubscriptionReturn")]
        public RecServicesRequestResponse ChangeSubscription(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string[] groups, string action, string email, int routingRule, string locale, string timeZone) {
            object[] results = this.Invoke("ChangeSubscription", new object[] {
                        h,
                        ID,
                        partnerUID,
                        groups,
                        action,
                        email,
                        routingRule,
                        locale,
                        timeZone});
            return ((RecServicesRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeSubscriptionAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string[] groups, string action, string email, int routingRule, string locale, string timeZone) {
            this.ChangeSubscriptionAsync(h, ID, partnerUID, groups, action, email, routingRule, locale, timeZone, null);
        }
        
        /// <remarks/>
        public void ChangeSubscriptionAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string[] groups, string action, string email, int routingRule, string locale, string timeZone, object userState) {
            if ((this.ChangeSubscriptionOperationCompleted == null)) {
                this.ChangeSubscriptionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeSubscriptionOperationCompleted);
            }
            this.InvokeAsync("ChangeSubscription", new object[] {
                        h,
                        ID,
                        partnerUID,
                        groups,
                        action,
                        email,
                        routingRule,
                        locale,
                        timeZone}, this.ChangeSubscriptionOperationCompleted, userState);
        }
        
        private void OnChangeSubscriptionOperationCompleted(object arg) {
            if ((this.ChangeSubscriptionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeSubscriptionCompleted(this, new ChangeSubscriptionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("UnsubscribeAllReturn")]
        public RecServicesRequestResponse UnsubscribeAll(RecServicesHeader h, RecServicesIdentification ID, string name, string partnerUID) {
            object[] results = this.Invoke("UnsubscribeAll", new object[] {
                        h,
                        ID,
                        name,
                        partnerUID});
            return ((RecServicesRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UnsubscribeAllAsync(RecServicesHeader h, RecServicesIdentification ID, string name, string partnerUID) {
            this.UnsubscribeAllAsync(h, ID, name, partnerUID, null);
        }
        
        /// <remarks/>
        public void UnsubscribeAllAsync(RecServicesHeader h, RecServicesIdentification ID, string name, string partnerUID, object userState) {
            if ((this.UnsubscribeAllOperationCompleted == null)) {
                this.UnsubscribeAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsubscribeAllOperationCompleted);
            }
            this.InvokeAsync("UnsubscribeAll", new object[] {
                        h,
                        ID,
                        name,
                        partnerUID}, this.UnsubscribeAllOperationCompleted, userState);
        }
        
        private void OnUnsubscribeAllOperationCompleted(object arg) {
            if ((this.UnsubscribeAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnsubscribeAllCompleted(this, new UnsubscribeAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("AddGroupReturn")]
        public RecServicesRequestResponse AddGroup(RecServicesHeader h, RecServicesIdentification ID, string group, string groupDescription) {
            object[] results = this.Invoke("AddGroup", new object[] {
                        h,
                        ID,
                        group,
                        groupDescription});
            return ((RecServicesRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupAsync(RecServicesHeader h, RecServicesIdentification ID, string group, string groupDescription) {
            this.AddGroupAsync(h, ID, group, groupDescription, null);
        }
        
        /// <remarks/>
        public void AddGroupAsync(RecServicesHeader h, RecServicesIdentification ID, string group, string groupDescription, object userState) {
            if ((this.AddGroupOperationCompleted == null)) {
                this.AddGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupOperationCompleted);
            }
            this.InvokeAsync("AddGroup", new object[] {
                        h,
                        ID,
                        group,
                        groupDescription}, this.AddGroupOperationCompleted, userState);
        }
        
        private void OnAddGroupOperationCompleted(object arg) {
            if ((this.AddGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupCompleted(this, new AddGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("PartnerSignUpReturn")]
        public RecServicesRequestResponse PartnerSignUp(RecServicesHeader h, RecServicesIdentification ID, string name, string feedURL) {
            object[] results = this.Invoke("PartnerSignUp", new object[] {
                        h,
                        ID,
                        name,
                        feedURL});
            return ((RecServicesRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void PartnerSignUpAsync(RecServicesHeader h, RecServicesIdentification ID, string name, string feedURL) {
            this.PartnerSignUpAsync(h, ID, name, feedURL, null);
        }
        
        /// <remarks/>
        public void PartnerSignUpAsync(RecServicesHeader h, RecServicesIdentification ID, string name, string feedURL, object userState) {
            if ((this.PartnerSignUpOperationCompleted == null)) {
                this.PartnerSignUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPartnerSignUpOperationCompleted);
            }
            this.InvokeAsync("PartnerSignUp", new object[] {
                        h,
                        ID,
                        name,
                        feedURL}, this.PartnerSignUpOperationCompleted, userState);
        }
        
        private void OnPartnerSignUpOperationCompleted(object arg) {
            if ((this.PartnerSignUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PartnerSignUpCompleted(this, new PartnerSignUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("UserSignUpReturn")]
        public RecServicesRequestResponse UserSignUp(RecServicesHeader h, RecServicesIdentification ID, string name, string feedURL) {
            object[] results = this.Invoke("UserSignUp", new object[] {
                        h,
                        ID,
                        name,
                        feedURL});
            return ((RecServicesRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void UserSignUpAsync(RecServicesHeader h, RecServicesIdentification ID, string name, string feedURL) {
            this.UserSignUpAsync(h, ID, name, feedURL, null);
        }
        
        /// <remarks/>
        public void UserSignUpAsync(RecServicesHeader h, RecServicesIdentification ID, string name, string feedURL, object userState) {
            if ((this.UserSignUpOperationCompleted == null)) {
                this.UserSignUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserSignUpOperationCompleted);
            }
            this.InvokeAsync("UserSignUp", new object[] {
                        h,
                        ID,
                        name,
                        feedURL}, this.UserSignUpOperationCompleted, userState);
        }
        
        private void OnUserSignUpOperationCompleted(object arg) {
            if ((this.UserSignUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserSignUpCompleted(this, new UserSignUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("RemoveGroupReturn")]
        public RecServicesRequestResponse RemoveGroup(RecServicesHeader h, RecServicesIdentification ID, string group) {
            object[] results = this.Invoke("RemoveGroup", new object[] {
                        h,
                        ID,
                        group});
            return ((RecServicesRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveGroupAsync(RecServicesHeader h, RecServicesIdentification ID, string group) {
            this.RemoveGroupAsync(h, ID, group, null);
        }
        
        /// <remarks/>
        public void RemoveGroupAsync(RecServicesHeader h, RecServicesIdentification ID, string group, object userState) {
            if ((this.RemoveGroupOperationCompleted == null)) {
                this.RemoveGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveGroupOperationCompleted);
            }
            this.InvokeAsync("RemoveGroup", new object[] {
                        h,
                        ID,
                        group}, this.RemoveGroupOperationCompleted, userState);
        }
        
        private void OnRemoveGroupOperationCompleted(object arg) {
            if ((this.RemoveGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveGroupCompleted(this, new RemoveGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("FindGroupsForUserReturn")]
        public RecGroupsRequestResponse FindGroupsForUser(RecServicesHeader h, RecServicesIdentification ID, string partnerUID) {
            object[] results = this.Invoke("FindGroupsForUser", new object[] {
                        h,
                        ID,
                        partnerUID});
            return ((RecGroupsRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FindGroupsForUserAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID) {
            this.FindGroupsForUserAsync(h, ID, partnerUID, null);
        }
        
        /// <remarks/>
        public void FindGroupsForUserAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, object userState) {
            if ((this.FindGroupsForUserOperationCompleted == null)) {
                this.FindGroupsForUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindGroupsForUserOperationCompleted);
            }
            this.InvokeAsync("FindGroupsForUser", new object[] {
                        h,
                        ID,
                        partnerUID}, this.FindGroupsForUserOperationCompleted, userState);
        }
        
        private void OnFindGroupsForUserOperationCompleted(object arg) {
            if ((this.FindGroupsForUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindGroupsForUserCompleted(this, new FindGroupsForUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("FindAllGroupsReturn")]
        public RecGroupsRequestResponse FindAllGroups(RecServicesHeader h, RecServicesIdentification ID) {
            object[] results = this.Invoke("FindAllGroups", new object[] {
                        h,
                        ID});
            return ((RecGroupsRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllGroupsAsync(RecServicesHeader h, RecServicesIdentification ID) {
            this.FindAllGroupsAsync(h, ID, null);
        }
        
        /// <remarks/>
        public void FindAllGroupsAsync(RecServicesHeader h, RecServicesIdentification ID, object userState) {
            if ((this.FindAllGroupsOperationCompleted == null)) {
                this.FindAllGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllGroupsOperationCompleted);
            }
            this.InvokeAsync("FindAllGroups", new object[] {
                        h,
                        ID}, this.FindAllGroupsOperationCompleted, userState);
        }
        
        private void OnFindAllGroupsOperationCompleted(object arg) {
            if ((this.FindAllGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllGroupsCompleted(this, new FindAllGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("FindAllUsersReturn")]
        public RecUsersRequestResponse FindAllUsers(RecServicesHeader h, RecServicesIdentification ID, string groupName, int startIndex, int endIndex) {
            object[] results = this.Invoke("FindAllUsers", new object[] {
                        h,
                        ID,
                        groupName,
                        startIndex,
                        endIndex});
            return ((RecUsersRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void FindAllUsersAsync(RecServicesHeader h, RecServicesIdentification ID, string groupName, int startIndex, int endIndex) {
            this.FindAllUsersAsync(h, ID, groupName, startIndex, endIndex, null);
        }
        
        /// <remarks/>
        public void FindAllUsersAsync(RecServicesHeader h, RecServicesIdentification ID, string groupName, int startIndex, int endIndex, object userState) {
            if ((this.FindAllUsersOperationCompleted == null)) {
                this.FindAllUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFindAllUsersOperationCompleted);
            }
            this.InvokeAsync("FindAllUsers", new object[] {
                        h,
                        ID,
                        groupName,
                        startIndex,
                        endIndex}, this.FindAllUsersOperationCompleted, userState);
        }
        
        private void OnFindAllUsersOperationCompleted(object arg) {
            if ((this.FindAllUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FindAllUsersCompleted(this, new FindAllUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://soapservices.messagecast.net", ResponseNamespace="http://services.alerts.live-ppe.com/axis/services/Subscription")]
        [return: System.Xml.Serialization.SoapElementAttribute("ValidateSubscriberGroupReturn")]
        public RecValidRequestResponse ValidateSubscriberGroup(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string groupName) {
            object[] results = this.Invoke("ValidateSubscriberGroup", new object[] {
                        h,
                        ID,
                        partnerUID,
                        groupName});
            return ((RecValidRequestResponse)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateSubscriberGroupAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string groupName) {
            this.ValidateSubscriberGroupAsync(h, ID, partnerUID, groupName, null);
        }
        
        /// <remarks/>
        public void ValidateSubscriberGroupAsync(RecServicesHeader h, RecServicesIdentification ID, string partnerUID, string groupName, object userState) {
            if ((this.ValidateSubscriberGroupOperationCompleted == null)) {
                this.ValidateSubscriberGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateSubscriberGroupOperationCompleted);
            }
            this.InvokeAsync("ValidateSubscriberGroup", new object[] {
                        h,
                        ID,
                        partnerUID,
                        groupName}, this.ValidateSubscriberGroupOperationCompleted, userState);
        }
        
        private void OnValidateSubscriberGroupOperationCompleted(object arg) {
            if ((this.ValidateSubscriberGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateSubscriberGroupCompleted(this, new ValidateSubscriberGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecServicesHeader {
        
        private string messageIDField;
        
        private string timestampField;
        
        private string versionField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string messageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string version {
            get {
                return this.versionField;
            }
            set {
                this.versionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecServicesInformation {
        
        private string itemField;
        
        private RecServicesResponse responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RecServicesResponse response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecServicesResponse {
        
        private string sOAPRequestField;
        
        private string sOAPResponseField;
        
        private int statusCodeField;
        
        private string statusReasonField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SOAPRequest {
            get {
                return this.sOAPRequestField;
            }
            set {
                this.sOAPRequestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string SOAPResponse {
            get {
                return this.sOAPResponseField;
            }
            set {
                this.sOAPResponseField = value;
            }
        }
        
        /// <remarks/>
        public int statusCode {
            get {
                return this.statusCodeField;
            }
            set {
                this.statusCodeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string statusReason {
            get {
                return this.statusReasonField;
            }
            set {
                this.statusReasonField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecServicesContact {
        
        private System.Nullable<int> sGIDField;
        
        private string fromField;
        
        private int ordField;
        
        private int sendToContactIDField;
        
        private string toField;
        
        private string transportField;
        
        private int transportIDField;
        
        private int transportTypeIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> SGID {
            get {
                return this.sGIDField;
            }
            set {
                this.sGIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string from {
            get {
                return this.fromField;
            }
            set {
                this.fromField = value;
            }
        }
        
        /// <remarks/>
        public int ord {
            get {
                return this.ordField;
            }
            set {
                this.ordField = value;
            }
        }
        
        /// <remarks/>
        public int sendToContactID {
            get {
                return this.sendToContactIDField;
            }
            set {
                this.sendToContactIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string to {
            get {
                return this.toField;
            }
            set {
                this.toField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string transport {
            get {
                return this.transportField;
            }
            set {
                this.transportField = value;
            }
        }
        
        /// <remarks/>
        public int transportID {
            get {
                return this.transportIDField;
            }
            set {
                this.transportIDField = value;
            }
        }
        
        /// <remarks/>
        public int transportTypeID {
            get {
                return this.transportTypeIDField;
            }
            set {
                this.transportTypeIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecUsersGroup {
        
        private RecServicesContact[] fromContactsField;
        
        private string groupNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RecServicesContact[] fromContacts {
            get {
                return this.fromContactsField;
            }
            set {
                this.fromContactsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string groupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecValidRequestResponse))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecDetailRequestResponse))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecGroupsRequestResponse))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecUsersRequestResponse))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(RecAlertsRequestResponse))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecServicesRequestResponse {
        
        private RecServicesHeader headerField;
        
        private RecServicesResponse responseField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RecServicesHeader header {
            get {
                return this.headerField;
            }
            set {
                this.headerField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RecServicesResponse response {
            get {
                return this.responseField;
            }
            set {
                this.responseField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecValidRequestResponse : RecServicesRequestResponse {
        
        private bool validRequestField;
        
        /// <remarks/>
        public bool validRequest {
            get {
                return this.validRequestField;
            }
            set {
                this.validRequestField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecDetailRequestResponse : RecServicesRequestResponse {
        
        private RecServicesInformation[] infoField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RecServicesInformation[] info {
            get {
                return this.infoField;
            }
            set {
                this.infoField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecGroupsRequestResponse : RecServicesRequestResponse {
        
        private string[] subscriptionGroupsField;
        
        private string[] unSubscribedGroupsField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] subscriptionGroups {
            get {
                return this.subscriptionGroupsField;
            }
            set {
                this.subscriptionGroupsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] unSubscribedGroups {
            get {
                return this.unSubscribedGroupsField;
            }
            set {
                this.unSubscribedGroupsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecUsersRequestResponse : RecServicesRequestResponse {
        
        private System.Nullable<int> totalNumUsersField;
        
        private RecUsersGroup[] usersField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public System.Nullable<int> totalNumUsers {
            get {
                return this.totalNumUsersField;
            }
            set {
                this.totalNumUsersField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public RecUsersGroup[] users {
            get {
                return this.usersField;
            }
            set {
                this.usersField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecAlertsRequestResponse : RecServicesRequestResponse {
        
        private string uRLField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string URL {
            get {
                return this.uRLField;
            }
            set {
                this.uRLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="messagecast.net")]
    public partial class RecServicesIdentification {
        
        private int pINIDField;
        
        private string pwField;
        
        /// <remarks/>
        public int PINID {
            get {
                return this.pINIDField;
            }
            set {
                this.pINIDField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string PW {
            get {
                return this.pwField;
            }
            set {
                this.pwField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void InitiateSignupCompletedEventHandler(object sender, InitiateSignupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InitiateSignupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InitiateSignupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecAlertsRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecAlertsRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ChangeSubscriptionCompletedEventHandler(object sender, ChangeSubscriptionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeSubscriptionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeSubscriptionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecServicesRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecServicesRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UnsubscribeAllCompletedEventHandler(object sender, UnsubscribeAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnsubscribeAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnsubscribeAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecServicesRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecServicesRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void AddGroupCompletedEventHandler(object sender, AddGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecServicesRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecServicesRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void PartnerSignUpCompletedEventHandler(object sender, PartnerSignUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PartnerSignUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PartnerSignUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecServicesRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecServicesRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void UserSignUpCompletedEventHandler(object sender, UserSignUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserSignUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserSignUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecServicesRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecServicesRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void RemoveGroupCompletedEventHandler(object sender, RemoveGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecServicesRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecServicesRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FindGroupsForUserCompletedEventHandler(object sender, FindGroupsForUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindGroupsForUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindGroupsForUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecGroupsRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecGroupsRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FindAllGroupsCompletedEventHandler(object sender, FindAllGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecGroupsRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecGroupsRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void FindAllUsersCompletedEventHandler(object sender, FindAllUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FindAllUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FindAllUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecUsersRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecUsersRequestResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void ValidateSubscriberGroupCompletedEventHandler(object sender, ValidateSubscriberGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateSubscriberGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateSubscriberGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public RecValidRequestResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((RecValidRequestResponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591